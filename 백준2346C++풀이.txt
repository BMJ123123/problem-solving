#include <iostream>
#include <string>
#include <deque>

using namespace std;

deque<int> d;
int a[1000], sum = 0;
int Pl(int keys);
int Mi(int keys);

int main()
{
    int n, arr[2][1000]; cin >> n;
    int nu;
    for (int i = 1; i < n+1; i++)
    {
        cin >> nu;
        arr[1][i-1] = nu; //1번째 줄       
        arr[0][i-1] = i;  //0번째 줄
        d.push_back(i); //1~n까지 순서대로
    }


    int key = 1;
    for (int i = 0; i < n; i++)
    {
        int keys = arr[1][key-1];
        if (keys > 0) key=Pl(keys);
        else key=Mi(keys);
    }


    for (int i = 0; i < n - 1; i++) cout << a[i] << ' '; cout << a[n - 1];

    return 0;
}




int Pl(int keys)
{
    a[sum] = d.front(); sum++;
    d.pop_front();
    if (d.size() > 0) {
        for (int j = 0; j < keys - 1; j++) { d.push_back(d.front()); d.pop_front(); }
        int key = d.front();

        return key;
    } else return 0;
}

int Mi(int keys)
{
    a[sum] = d.front(); sum++;
    d.pop_front();
    keys = keys * -1;
    if (d.size() > 0) {
        for (int j = 0; j < keys; j++) { d.push_front(d.back()); d.pop_back(); }
        int key = d.front();

        return key;
    } else return 0;
}